#pragma warning disable 0649
//------------------------------------------------------------------------------
// <auto-generated>This code was generated by LLBLGen Pro v4.1.</auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.ComponentModel;

namespace L2S.Bencher.EntityClasses
{
	/// <summary>Class which represents the entity 'SalesOrderDetail', mapped on table 'AdventureWorks.Sales.SalesOrderDetail'.</summary>
	[Table(Name="[Sales].[SalesOrderDetail]")]
	public partial class SalesOrderDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		#region Events
		/// <summary>Event which is raised when a property value is changing.</summary>
		public event PropertyChangingEventHandler PropertyChanging;
		/// <summary>Event which is raised when a property value changes.</summary>
		public event PropertyChangedEventHandler PropertyChanged;
		#endregion
		
		#region Class Member Declarations
		private System.String	_carrierTrackingNumber;
		private System.Decimal	_lineTotal;
		private System.DateTime	_modifiedDate;
		private System.Int16	_orderQty;
		private System.Int32	_productId;
		private System.Guid	_rowguid;
		private System.Int32	_salesOrderDetailId;
		private System.Int32	_salesOrderId;
		private System.Int32	_specialOfferId;
		private System.Decimal	_unitPrice;
		private System.Decimal	_unitPriceDiscount;
		private EntityRef <SalesOrderHeader> _salesOrderHeader;
		private EntityRef <SpecialOfferProduct> _specialOfferProduct;
		#endregion
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnCarrierTrackingNumberChanging(System.String value);
		partial void OnCarrierTrackingNumberChanged();
		partial void OnLineTotalChanging(System.Decimal value);
		partial void OnLineTotalChanged();
		partial void OnModifiedDateChanging(System.DateTime value);
		partial void OnModifiedDateChanged();
		partial void OnOrderQtyChanging(System.Int16 value);
		partial void OnOrderQtyChanged();
		partial void OnProductIdChanging(System.Int32 value);
		partial void OnProductIdChanged();
		partial void OnRowguidChanging(System.Guid value);
		partial void OnRowguidChanged();
		partial void OnSalesOrderDetailIdChanging(System.Int32 value);
		partial void OnSalesOrderDetailIdChanged();
		partial void OnSalesOrderIdChanging(System.Int32 value);
		partial void OnSalesOrderIdChanged();
		partial void OnSpecialOfferIdChanging(System.Int32 value);
		partial void OnSpecialOfferIdChanged();
		partial void OnUnitPriceChanging(System.Decimal value);
		partial void OnUnitPriceChanged();
		partial void OnUnitPriceDiscountChanging(System.Decimal value);
		partial void OnUnitPriceDiscountChanged();
		#endregion
		
		/// <summary>Initializes a new instance of the <see cref="SalesOrderDetail"/> class.</summary>
		public SalesOrderDetail()
		{
			_salesOrderHeader = default(EntityRef<SalesOrderHeader>);
			_specialOfferProduct = default(EntityRef<SpecialOfferProduct>);
			OnCreated();
		}

		/// <summary>Raises the PropertyChanging event</summary>
		/// <param name="propertyName">name of the property which is changing</param>
		protected virtual void SendPropertyChanging(string propertyName)
		{
			if((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, new PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>Raises the PropertyChanged event for the property specified</summary>
		/// <param name="propertyName">name of the property which was changed</param>
		protected virtual void SendPropertyChanged(string propertyName)
		{
			if((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		

		#region Class Property Declarations
		/// <summary>Gets or sets the CarrierTrackingNumber field. Mapped on target field 'CarrierTrackingNumber'. </summary>
		[Column(Name="CarrierTrackingNumber", Storage="_carrierTrackingNumber", DbType="nvarchar(25) NULL")]
		public System.String CarrierTrackingNumber
		{
			get	{ return _carrierTrackingNumber; }
			set
			{
				if((_carrierTrackingNumber != value))
				{
					OnCarrierTrackingNumberChanging(value);
					SendPropertyChanging("CarrierTrackingNumber");
					_carrierTrackingNumber = value;
					SendPropertyChanged("CarrierTrackingNumber");
					OnCarrierTrackingNumberChanged();
				}
			}
		}

		/// <summary>Gets or sets the LineTotal field. Mapped on target field 'LineTotal'. </summary>
		[Column(Name="LineTotal", Storage="_lineTotal", AutoSync=AutoSync.OnInsert, CanBeNull=false, DbType="numeric NOT NULL", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Decimal LineTotal
		{
			get	{ return _lineTotal; }
		}

		/// <summary>Gets or sets the ModifiedDate field. Mapped on target field 'ModifiedDate'. </summary>
		[Column(Name="ModifiedDate", Storage="_modifiedDate", CanBeNull=false, DbType="datetime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get	{ return _modifiedDate; }
			set
			{
				if((_modifiedDate != value))
				{
					OnModifiedDateChanging(value);
					SendPropertyChanging("ModifiedDate");
					_modifiedDate = value;
					SendPropertyChanged("ModifiedDate");
					OnModifiedDateChanged();
				}
			}
		}

		/// <summary>Gets or sets the OrderQty field. Mapped on target field 'OrderQty'. </summary>
		[Column(Name="OrderQty", Storage="_orderQty", CanBeNull=false, DbType="smallint NOT NULL")]
		public System.Int16 OrderQty
		{
			get	{ return _orderQty; }
			set
			{
				if((_orderQty != value))
				{
					OnOrderQtyChanging(value);
					SendPropertyChanging("OrderQty");
					_orderQty = value;
					SendPropertyChanged("OrderQty");
					OnOrderQtyChanged();
				}
			}
		}

		/// <summary>Gets or sets the ProductId field. Mapped on target field 'ProductID'. </summary>
		[Column(Name="ProductID", Storage="_productId", CanBeNull=false, DbType="int NOT NULL")]
		public System.Int32 ProductId
		{
			get	{ return _productId; }
			set
			{
				if((_productId != value))
				{
					if(_specialOfferProduct.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					OnProductIdChanging(value);
					SendPropertyChanging("ProductId");
					_productId = value;
					SendPropertyChanged("ProductId");
					OnProductIdChanged();
				}
			}
		}

		/// <summary>Gets or sets the Rowguid field. Mapped on target field 'rowguid'. </summary>
		[Column(Name="rowguid", Storage="_rowguid", AutoSync=AutoSync.OnInsert, CanBeNull=false, DbType="uniqueidentifier NOT NULL", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Rowguid
		{
			get	{ return _rowguid; }
			set
			{
				if((_rowguid != value))
				{
					OnRowguidChanging(value);
					SendPropertyChanging("Rowguid");
					_rowguid = value;
					SendPropertyChanged("Rowguid");
					OnRowguidChanged();
				}
			}
		}

		/// <summary>Gets or sets the SalesOrderDetailId field. Mapped on target field 'SalesOrderDetailID'. </summary>
		[Column(Name="SalesOrderDetailID", Storage="_salesOrderDetailId", AutoSync=AutoSync.OnInsert, CanBeNull=false, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Int32 SalesOrderDetailId
		{
			get	{ return _salesOrderDetailId; }
			set
			{
				if((_salesOrderDetailId != value))
				{
					OnSalesOrderDetailIdChanging(value);
					SendPropertyChanging("SalesOrderDetailId");
					_salesOrderDetailId = value;
					SendPropertyChanged("SalesOrderDetailId");
					OnSalesOrderDetailIdChanged();
				}
			}
		}

		/// <summary>Gets or sets the SalesOrderId field. Mapped on target field 'SalesOrderID'. </summary>
		[Column(Name="SalesOrderID", Storage="_salesOrderId", CanBeNull=false, DbType="int NOT NULL", IsPrimaryKey=true)]
		public System.Int32 SalesOrderId
		{
			get	{ return _salesOrderId; }
			set
			{
				if((_salesOrderId != value))
				{
					if(_salesOrderHeader.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					OnSalesOrderIdChanging(value);
					SendPropertyChanging("SalesOrderId");
					_salesOrderId = value;
					SendPropertyChanged("SalesOrderId");
					OnSalesOrderIdChanged();
				}
			}
		}

		/// <summary>Gets or sets the SpecialOfferId field. Mapped on target field 'SpecialOfferID'. </summary>
		[Column(Name="SpecialOfferID", Storage="_specialOfferId", CanBeNull=false, DbType="int NOT NULL")]
		public System.Int32 SpecialOfferId
		{
			get	{ return _specialOfferId; }
			set
			{
				if((_specialOfferId != value))
				{
					if(_specialOfferProduct.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					OnSpecialOfferIdChanging(value);
					SendPropertyChanging("SpecialOfferId");
					_specialOfferId = value;
					SendPropertyChanged("SpecialOfferId");
					OnSpecialOfferIdChanged();
				}
			}
		}

		/// <summary>Gets or sets the UnitPrice field. Mapped on target field 'UnitPrice'. </summary>
		[Column(Name="UnitPrice", Storage="_unitPrice", CanBeNull=false, DbType="money NOT NULL")]
		public System.Decimal UnitPrice
		{
			get	{ return _unitPrice; }
			set
			{
				if((_unitPrice != value))
				{
					OnUnitPriceChanging(value);
					SendPropertyChanging("UnitPrice");
					_unitPrice = value;
					SendPropertyChanged("UnitPrice");
					OnUnitPriceChanged();
				}
			}
		}

		/// <summary>Gets or sets the UnitPriceDiscount field. Mapped on target field 'UnitPriceDiscount'. </summary>
		[Column(Name="UnitPriceDiscount", Storage="_unitPriceDiscount", CanBeNull=false, DbType="money NOT NULL")]
		public System.Decimal UnitPriceDiscount
		{
			get	{ return _unitPriceDiscount; }
			set
			{
				if((_unitPriceDiscount != value))
				{
					OnUnitPriceDiscountChanging(value);
					SendPropertyChanging("UnitPriceDiscount");
					_unitPriceDiscount = value;
					SendPropertyChanged("UnitPriceDiscount");
					OnUnitPriceDiscountChanged();
				}
			}
		}

		/// <summary>Represents the navigator which is mapped onto the association 'SalesOrderDetail.SalesOrderHeader - SalesOrderHeader.SalesOrderDetails (m:1)'</summary>
		[Association(Name="SalesOrderDetail_SalesOrderHeader166045216bca4ff9b765c87f30cbd21b", Storage="_salesOrderHeader", ThisKey="SalesOrderId", IsForeignKey=true)] 
		public SalesOrderHeader SalesOrderHeader
		{
			get { return _salesOrderHeader.Entity; }
			set
			{
				SalesOrderHeader previousValue = _salesOrderHeader.Entity;
				if((previousValue != value) || (_salesOrderHeader.HasLoadedOrAssignedValue == false))
				{
					this.SendPropertyChanging("SalesOrderHeader");
					if(previousValue != null)
					{
						_salesOrderHeader.Entity = null;
						previousValue.SalesOrderDetails.Remove(this);
					}
					_salesOrderHeader.Entity = value;
					if(value == null)
					{
						_salesOrderId = default(System.Int32);
					}
					else
					{
						value.SalesOrderDetails.Add(this);
						_salesOrderId = value.SalesOrderId;
					}
					this.SendPropertyChanged("SalesOrderHeader");
				}
			}
		}
		
		/// <summary>Represents the navigator which is mapped onto the association 'SalesOrderDetail.SpecialOfferProduct - SpecialOfferProduct.SalesOrderDetails (m:1)'</summary>
		[Association(Name="SalesOrderDetail_SpecialOfferProduct5ab9a124ce484578bda46575364ae0a6", Storage="_specialOfferProduct", ThisKey="ProductId, SpecialOfferId", IsForeignKey=true)] 
		public SpecialOfferProduct SpecialOfferProduct
		{
			get { return _specialOfferProduct.Entity; }
			set
			{
				SpecialOfferProduct previousValue = _specialOfferProduct.Entity;
				if((previousValue != value) || (_specialOfferProduct.HasLoadedOrAssignedValue == false))
				{
					this.SendPropertyChanging("SpecialOfferProduct");
					if(previousValue != null)
					{
						_specialOfferProduct.Entity = null;
						previousValue.SalesOrderDetails.Remove(this);
					}
					_specialOfferProduct.Entity = value;
					if(value == null)
					{
						_specialOfferId = default(System.Int32);
						_productId = default(System.Int32);
					}
					else
					{
						value.SalesOrderDetails.Add(this);
						_specialOfferId = value.SpecialOfferId;
						_productId = value.ProductId;
					}
					this.SendPropertyChanged("SpecialOfferProduct");
				}
			}
		}
		
		#endregion
	}
}
#pragma warning restore 0649
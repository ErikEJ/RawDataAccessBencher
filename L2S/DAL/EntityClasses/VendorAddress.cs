#pragma warning disable 0649
//------------------------------------------------------------------------------
// <auto-generated>This code was generated by LLBLGen Pro v4.1.</auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.ComponentModel;

namespace L2S.Bencher.EntityClasses
{
	/// <summary>Class which represents the entity 'VendorAddress', mapped on table 'AdventureWorks.Purchasing.VendorAddress'.</summary>
	[Table(Name="[Purchasing].[VendorAddress]")]
	public partial class VendorAddress : INotifyPropertyChanging, INotifyPropertyChanged
	{
		#region Events
		/// <summary>Event which is raised when a property value is changing.</summary>
		public event PropertyChangingEventHandler PropertyChanging;
		/// <summary>Event which is raised when a property value changes.</summary>
		public event PropertyChangedEventHandler PropertyChanged;
		#endregion
		
		#region Class Member Declarations
		private System.Int32	_addressId;
		private System.Int32	_addressTypeId;
		private System.DateTime	_modifiedDate;
		private System.Int32	_vendorId;
		private EntityRef <Address> _address;
		private EntityRef <AddressType> _addressType;
		private EntityRef <Vendor> _vendor;
		#endregion
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnAddressIdChanging(System.Int32 value);
		partial void OnAddressIdChanged();
		partial void OnAddressTypeIdChanging(System.Int32 value);
		partial void OnAddressTypeIdChanged();
		partial void OnModifiedDateChanging(System.DateTime value);
		partial void OnModifiedDateChanged();
		partial void OnVendorIdChanging(System.Int32 value);
		partial void OnVendorIdChanged();
		#endregion
		
		/// <summary>Initializes a new instance of the <see cref="VendorAddress"/> class.</summary>
		public VendorAddress()
		{
			_address = default(EntityRef<Address>);
			_addressType = default(EntityRef<AddressType>);
			_vendor = default(EntityRef<Vendor>);
			OnCreated();
		}

		/// <summary>Raises the PropertyChanging event</summary>
		/// <param name="propertyName">name of the property which is changing</param>
		protected virtual void SendPropertyChanging(string propertyName)
		{
			if((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, new PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>Raises the PropertyChanged event for the property specified</summary>
		/// <param name="propertyName">name of the property which was changed</param>
		protected virtual void SendPropertyChanged(string propertyName)
		{
			if((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		

		#region Class Property Declarations
		/// <summary>Gets or sets the AddressId field. Mapped on target field 'AddressID'. </summary>
		[Column(Name="AddressID", Storage="_addressId", CanBeNull=false, DbType="int NOT NULL", IsPrimaryKey=true)]
		public System.Int32 AddressId
		{
			get	{ return _addressId; }
			set
			{
				if((_addressId != value))
				{
					if(_address.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					OnAddressIdChanging(value);
					SendPropertyChanging("AddressId");
					_addressId = value;
					SendPropertyChanged("AddressId");
					OnAddressIdChanged();
				}
			}
		}

		/// <summary>Gets or sets the AddressTypeId field. Mapped on target field 'AddressTypeID'. </summary>
		[Column(Name="AddressTypeID", Storage="_addressTypeId", CanBeNull=false, DbType="int NOT NULL")]
		public System.Int32 AddressTypeId
		{
			get	{ return _addressTypeId; }
			set
			{
				if((_addressTypeId != value))
				{
					if(_addressType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					OnAddressTypeIdChanging(value);
					SendPropertyChanging("AddressTypeId");
					_addressTypeId = value;
					SendPropertyChanged("AddressTypeId");
					OnAddressTypeIdChanged();
				}
			}
		}

		/// <summary>Gets or sets the ModifiedDate field. Mapped on target field 'ModifiedDate'. </summary>
		[Column(Name="ModifiedDate", Storage="_modifiedDate", CanBeNull=false, DbType="datetime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get	{ return _modifiedDate; }
			set
			{
				if((_modifiedDate != value))
				{
					OnModifiedDateChanging(value);
					SendPropertyChanging("ModifiedDate");
					_modifiedDate = value;
					SendPropertyChanged("ModifiedDate");
					OnModifiedDateChanged();
				}
			}
		}

		/// <summary>Gets or sets the VendorId field. Mapped on target field 'VendorID'. </summary>
		[Column(Name="VendorID", Storage="_vendorId", CanBeNull=false, DbType="int NOT NULL", IsPrimaryKey=true)]
		public System.Int32 VendorId
		{
			get	{ return _vendorId; }
			set
			{
				if((_vendorId != value))
				{
					if(_vendor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					OnVendorIdChanging(value);
					SendPropertyChanging("VendorId");
					_vendorId = value;
					SendPropertyChanged("VendorId");
					OnVendorIdChanged();
				}
			}
		}

		/// <summary>Represents the navigator which is mapped onto the association 'VendorAddress.Address - Address.VendorAddresses (m:1)'</summary>
		[Association(Name="VendorAddress_Address3a3c04911dbe42189b3af85d0223f01a", Storage="_address", ThisKey="AddressId", IsForeignKey=true)] 
		public Address Address
		{
			get { return _address.Entity; }
			set
			{
				Address previousValue = _address.Entity;
				if((previousValue != value) || (_address.HasLoadedOrAssignedValue == false))
				{
					this.SendPropertyChanging("Address");
					if(previousValue != null)
					{
						_address.Entity = null;
						previousValue.VendorAddresses.Remove(this);
					}
					_address.Entity = value;
					if(value == null)
					{
						_addressId = default(System.Int32);
					}
					else
					{
						value.VendorAddresses.Add(this);
						_addressId = value.AddressId;
					}
					this.SendPropertyChanged("Address");
				}
			}
		}
		
		/// <summary>Represents the navigator which is mapped onto the association 'VendorAddress.AddressType - AddressType.VendorAddresses (m:1)'</summary>
		[Association(Name="VendorAddress_AddressTypec9f4bec903224c8ca948f66a07cf84e8", Storage="_addressType", ThisKey="AddressTypeId", IsForeignKey=true)] 
		public AddressType AddressType
		{
			get { return _addressType.Entity; }
			set
			{
				AddressType previousValue = _addressType.Entity;
				if((previousValue != value) || (_addressType.HasLoadedOrAssignedValue == false))
				{
					this.SendPropertyChanging("AddressType");
					if(previousValue != null)
					{
						_addressType.Entity = null;
						previousValue.VendorAddresses.Remove(this);
					}
					_addressType.Entity = value;
					if(value == null)
					{
						_addressTypeId = default(System.Int32);
					}
					else
					{
						value.VendorAddresses.Add(this);
						_addressTypeId = value.AddressTypeId;
					}
					this.SendPropertyChanged("AddressType");
				}
			}
		}
		
		/// <summary>Represents the navigator which is mapped onto the association 'VendorAddress.Vendor - Vendor.VendorAddresses (m:1)'</summary>
		[Association(Name="VendorAddress_Vendor9aefaf8ff0654d3883801658809c9958", Storage="_vendor", ThisKey="VendorId", IsForeignKey=true)] 
		public Vendor Vendor
		{
			get { return _vendor.Entity; }
			set
			{
				Vendor previousValue = _vendor.Entity;
				if((previousValue != value) || (_vendor.HasLoadedOrAssignedValue == false))
				{
					this.SendPropertyChanging("Vendor");
					if(previousValue != null)
					{
						_vendor.Entity = null;
						previousValue.VendorAddresses.Remove(this);
					}
					_vendor.Entity = value;
					if(value == null)
					{
						_vendorId = default(System.Int32);
					}
					else
					{
						value.VendorAddresses.Add(this);
						_vendorId = value.VendorId;
					}
					this.SendPropertyChanged("Vendor");
				}
			}
		}
		
		#endregion
	}
}
#pragma warning restore 0649
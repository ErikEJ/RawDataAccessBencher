#pragma warning disable 0649
//------------------------------------------------------------------------------
// <auto-generated>This code was generated by LLBLGen Pro v4.1.</auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.ComponentModel;

namespace L2S.Bencher.EntityClasses
{
	/// <summary>Class which represents the entity 'ProductSubcategory', mapped on table 'AdventureWorks.Production.ProductSubcategory'.</summary>
	[Table(Name="[Production].[ProductSubcategory]")]
	public partial class ProductSubcategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		#region Events
		/// <summary>Event which is raised when a property value is changing.</summary>
		public event PropertyChangingEventHandler PropertyChanging;
		/// <summary>Event which is raised when a property value changes.</summary>
		public event PropertyChangedEventHandler PropertyChanged;
		#endregion
		
		#region Class Member Declarations
		private System.DateTime	_modifiedDate;
		private System.String	_name;
		private System.Int32	_productCategoryId;
		private System.Int32	_productSubcategoryId;
		private System.Guid	_rowguid;
		private EntitySet <Product> _products;
		private EntityRef <ProductCategory> _productCategory;
		#endregion
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnModifiedDateChanging(System.DateTime value);
		partial void OnModifiedDateChanged();
		partial void OnNameChanging(System.String value);
		partial void OnNameChanged();
		partial void OnProductCategoryIdChanging(System.Int32 value);
		partial void OnProductCategoryIdChanged();
		partial void OnProductSubcategoryIdChanging(System.Int32 value);
		partial void OnProductSubcategoryIdChanged();
		partial void OnRowguidChanging(System.Guid value);
		partial void OnRowguidChanged();
		#endregion
		
		/// <summary>Initializes a new instance of the <see cref="ProductSubcategory"/> class.</summary>
		public ProductSubcategory()
		{
			_products = new EntitySet<Product>(new Action<Product>(this.Attach_Products), new Action<Product>(this.Detach_Products) );
			_productCategory = default(EntityRef<ProductCategory>);
			OnCreated();
		}

		/// <summary>Raises the PropertyChanging event</summary>
		/// <param name="propertyName">name of the property which is changing</param>
		protected virtual void SendPropertyChanging(string propertyName)
		{
			if((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, new PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>Raises the PropertyChanged event for the property specified</summary>
		/// <param name="propertyName">name of the property which was changed</param>
		protected virtual void SendPropertyChanged(string propertyName)
		{
			if((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		/// <summary>Attaches this instance to the entity specified as an associated entity</summary>
		/// <param name="entity">The related entity to attach to</param>
		private void Attach_Products(Product entity)
		{
			this.SendPropertyChanging("Products");
			entity.ProductSubcategory = this;
		}
		
		/// <summary>Detaches this instance from the entity specified so it's no longer an associated entity</summary>
		/// <param name="entity">The related entity to detach from</param>
		private void Detach_Products(Product entity)
		{
			this.SendPropertyChanging("Products");
			entity.ProductSubcategory = null;
		}


		#region Class Property Declarations
		/// <summary>Gets or sets the ModifiedDate field. Mapped on target field 'ModifiedDate'. </summary>
		[Column(Name="ModifiedDate", Storage="_modifiedDate", CanBeNull=false, DbType="datetime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get	{ return _modifiedDate; }
			set
			{
				if((_modifiedDate != value))
				{
					OnModifiedDateChanging(value);
					SendPropertyChanging("ModifiedDate");
					_modifiedDate = value;
					SendPropertyChanged("ModifiedDate");
					OnModifiedDateChanged();
				}
			}
		}

		/// <summary>Gets or sets the Name field. Mapped on target field 'Name'. </summary>
		[Column(Name="Name", Storage="_name", CanBeNull=false, DbType="nvarchar(50) NOT NULL")]
		public System.String Name
		{
			get	{ return _name; }
			set
			{
				if((_name != value))
				{
					OnNameChanging(value);
					SendPropertyChanging("Name");
					_name = value;
					SendPropertyChanged("Name");
					OnNameChanged();
				}
			}
		}

		/// <summary>Gets or sets the ProductCategoryId field. Mapped on target field 'ProductCategoryID'. </summary>
		[Column(Name="ProductCategoryID", Storage="_productCategoryId", CanBeNull=false, DbType="int NOT NULL")]
		public System.Int32 ProductCategoryId
		{
			get	{ return _productCategoryId; }
			set
			{
				if((_productCategoryId != value))
				{
					if(_productCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					OnProductCategoryIdChanging(value);
					SendPropertyChanging("ProductCategoryId");
					_productCategoryId = value;
					SendPropertyChanged("ProductCategoryId");
					OnProductCategoryIdChanged();
				}
			}
		}

		/// <summary>Gets or sets the ProductSubcategoryId field. Mapped on target field 'ProductSubcategoryID'. </summary>
		[Column(Name="ProductSubcategoryID", Storage="_productSubcategoryId", AutoSync=AutoSync.OnInsert, CanBeNull=false, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Int32 ProductSubcategoryId
		{
			get	{ return _productSubcategoryId; }
			set
			{
				if((_productSubcategoryId != value))
				{
					OnProductSubcategoryIdChanging(value);
					SendPropertyChanging("ProductSubcategoryId");
					_productSubcategoryId = value;
					SendPropertyChanged("ProductSubcategoryId");
					OnProductSubcategoryIdChanged();
				}
			}
		}

		/// <summary>Gets or sets the Rowguid field. Mapped on target field 'rowguid'. </summary>
		[Column(Name="rowguid", Storage="_rowguid", AutoSync=AutoSync.OnInsert, CanBeNull=false, DbType="uniqueidentifier NOT NULL", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Rowguid
		{
			get	{ return _rowguid; }
			set
			{
				if((_rowguid != value))
				{
					OnRowguidChanging(value);
					SendPropertyChanging("Rowguid");
					_rowguid = value;
					SendPropertyChanged("Rowguid");
					OnRowguidChanged();
				}
			}
		}

		/// <summary>Represents the navigator which is mapped onto the association 'Product.ProductSubcategory - ProductSubcategory.Products (m:1)'</summary>
		[Association(Name="Product_ProductSubcategory1ffc32b7c1804945bda9f74140112fe4", Storage="_products", OtherKey="ProductSubcategoryId")]
		public EntitySet<Product> Products
		{
			get { return this._products; }
			set { this._products.Assign(value); }
		}
		
		/// <summary>Represents the navigator which is mapped onto the association 'ProductSubcategory.ProductCategory - ProductCategory.ProductSubcategories (m:1)'</summary>
		[Association(Name="ProductSubcategory_ProductCategory059ac194fc44437ca0ca5afe9d450e14", Storage="_productCategory", ThisKey="ProductCategoryId", IsForeignKey=true)] 
		public ProductCategory ProductCategory
		{
			get { return _productCategory.Entity; }
			set
			{
				ProductCategory previousValue = _productCategory.Entity;
				if((previousValue != value) || (_productCategory.HasLoadedOrAssignedValue == false))
				{
					this.SendPropertyChanging("ProductCategory");
					if(previousValue != null)
					{
						_productCategory.Entity = null;
						previousValue.ProductSubcategories.Remove(this);
					}
					_productCategory.Entity = value;
					if(value == null)
					{
						_productCategoryId = default(System.Int32);
					}
					else
					{
						value.ProductSubcategories.Add(this);
						_productCategoryId = value.ProductCategoryId;
					}
					this.SendPropertyChanged("ProductCategory");
				}
			}
		}
		
		#endregion
	}
}
#pragma warning restore 0649
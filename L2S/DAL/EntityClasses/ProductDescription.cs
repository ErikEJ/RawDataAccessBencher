#pragma warning disable 0649
//------------------------------------------------------------------------------
// <auto-generated>This code was generated by LLBLGen Pro v4.1.</auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.ComponentModel;

namespace L2S.Bencher.EntityClasses
{
	/// <summary>Class which represents the entity 'ProductDescription', mapped on table 'AdventureWorks.Production.ProductDescription'.</summary>
	[Table(Name="[Production].[ProductDescription]")]
	public partial class ProductDescription : INotifyPropertyChanging, INotifyPropertyChanged
	{
		#region Events
		/// <summary>Event which is raised when a property value is changing.</summary>
		public event PropertyChangingEventHandler PropertyChanging;
		/// <summary>Event which is raised when a property value changes.</summary>
		public event PropertyChangedEventHandler PropertyChanged;
		#endregion
		
		#region Class Member Declarations
		private System.String	_description;
		private System.DateTime	_modifiedDate;
		private System.Int32	_productDescriptionId;
		private System.Guid	_rowguid;
		private EntitySet <ProductModelProductDescriptionCulture> _productModelProductDescriptionCultures;
		#endregion
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnDescriptionChanging(System.String value);
		partial void OnDescriptionChanged();
		partial void OnModifiedDateChanging(System.DateTime value);
		partial void OnModifiedDateChanged();
		partial void OnProductDescriptionIdChanging(System.Int32 value);
		partial void OnProductDescriptionIdChanged();
		partial void OnRowguidChanging(System.Guid value);
		partial void OnRowguidChanged();
		#endregion
		
		/// <summary>Initializes a new instance of the <see cref="ProductDescription"/> class.</summary>
		public ProductDescription()
		{
			_productModelProductDescriptionCultures = new EntitySet<ProductModelProductDescriptionCulture>(new Action<ProductModelProductDescriptionCulture>(this.Attach_ProductModelProductDescriptionCultures), new Action<ProductModelProductDescriptionCulture>(this.Detach_ProductModelProductDescriptionCultures) );
			OnCreated();
		}

		/// <summary>Raises the PropertyChanging event</summary>
		/// <param name="propertyName">name of the property which is changing</param>
		protected virtual void SendPropertyChanging(string propertyName)
		{
			if((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, new PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>Raises the PropertyChanged event for the property specified</summary>
		/// <param name="propertyName">name of the property which was changed</param>
		protected virtual void SendPropertyChanged(string propertyName)
		{
			if((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		/// <summary>Attaches this instance to the entity specified as an associated entity</summary>
		/// <param name="entity">The related entity to attach to</param>
		private void Attach_ProductModelProductDescriptionCultures(ProductModelProductDescriptionCulture entity)
		{
			this.SendPropertyChanging("ProductModelProductDescriptionCultures");
			entity.ProductDescription = this;
		}
		
		/// <summary>Detaches this instance from the entity specified so it's no longer an associated entity</summary>
		/// <param name="entity">The related entity to detach from</param>
		private void Detach_ProductModelProductDescriptionCultures(ProductModelProductDescriptionCulture entity)
		{
			this.SendPropertyChanging("ProductModelProductDescriptionCultures");
			entity.ProductDescription = null;
		}


		#region Class Property Declarations
		/// <summary>Gets or sets the Description field. Mapped on target field 'Description'. </summary>
		[Column(Name="Description", Storage="_description", CanBeNull=false, DbType="nvarchar(400) NOT NULL")]
		public System.String Description
		{
			get	{ return _description; }
			set
			{
				if((_description != value))
				{
					OnDescriptionChanging(value);
					SendPropertyChanging("Description");
					_description = value;
					SendPropertyChanged("Description");
					OnDescriptionChanged();
				}
			}
		}

		/// <summary>Gets or sets the ModifiedDate field. Mapped on target field 'ModifiedDate'. </summary>
		[Column(Name="ModifiedDate", Storage="_modifiedDate", CanBeNull=false, DbType="datetime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get	{ return _modifiedDate; }
			set
			{
				if((_modifiedDate != value))
				{
					OnModifiedDateChanging(value);
					SendPropertyChanging("ModifiedDate");
					_modifiedDate = value;
					SendPropertyChanged("ModifiedDate");
					OnModifiedDateChanged();
				}
			}
		}

		/// <summary>Gets or sets the ProductDescriptionId field. Mapped on target field 'ProductDescriptionID'. </summary>
		[Column(Name="ProductDescriptionID", Storage="_productDescriptionId", AutoSync=AutoSync.OnInsert, CanBeNull=false, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Int32 ProductDescriptionId
		{
			get	{ return _productDescriptionId; }
			set
			{
				if((_productDescriptionId != value))
				{
					OnProductDescriptionIdChanging(value);
					SendPropertyChanging("ProductDescriptionId");
					_productDescriptionId = value;
					SendPropertyChanged("ProductDescriptionId");
					OnProductDescriptionIdChanged();
				}
			}
		}

		/// <summary>Gets or sets the Rowguid field. Mapped on target field 'rowguid'. </summary>
		[Column(Name="rowguid", Storage="_rowguid", AutoSync=AutoSync.OnInsert, CanBeNull=false, DbType="uniqueidentifier NOT NULL", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Guid Rowguid
		{
			get	{ return _rowguid; }
			set
			{
				if((_rowguid != value))
				{
					OnRowguidChanging(value);
					SendPropertyChanging("Rowguid");
					_rowguid = value;
					SendPropertyChanged("Rowguid");
					OnRowguidChanged();
				}
			}
		}

		/// <summary>Represents the navigator which is mapped onto the association 'ProductModelProductDescriptionCulture.ProductDescription - ProductDescription.ProductModelProductDescriptionCultures (m:1)'</summary>
		[Association(Name="ProductModelProductDescriptionCulture_ProductDescriptionc809b91359884cc8b7cb922f737b1f5f", Storage="_productModelProductDescriptionCultures", OtherKey="ProductDescriptionId")]
		public EntitySet<ProductModelProductDescriptionCulture> ProductModelProductDescriptionCultures
		{
			get { return this._productModelProductDescriptionCultures; }
			set { this._productModelProductDescriptionCultures.Assign(value); }
		}
		
		#endregion
	}
}
#pragma warning restore 0649
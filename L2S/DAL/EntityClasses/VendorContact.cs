#pragma warning disable 0649
//------------------------------------------------------------------------------
// <auto-generated>This code was generated by LLBLGen Pro v4.1.</auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.ComponentModel;

namespace L2S.Bencher.EntityClasses
{
	/// <summary>Class which represents the entity 'VendorContact', mapped on table 'AdventureWorks.Purchasing.VendorContact'.</summary>
	[Table(Name="[Purchasing].[VendorContact]")]
	public partial class VendorContact : INotifyPropertyChanging, INotifyPropertyChanged
	{
		#region Events
		/// <summary>Event which is raised when a property value is changing.</summary>
		public event PropertyChangingEventHandler PropertyChanging;
		/// <summary>Event which is raised when a property value changes.</summary>
		public event PropertyChangedEventHandler PropertyChanged;
		#endregion
		
		#region Class Member Declarations
		private System.Int32	_contactId;
		private System.Int32	_contactTypeId;
		private System.DateTime	_modifiedDate;
		private System.Int32	_vendorId;
		private EntityRef <Contact> _contact;
		private EntityRef <ContactType> _contactType;
		private EntityRef <Vendor> _vendor;
		#endregion
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnContactIdChanging(System.Int32 value);
		partial void OnContactIdChanged();
		partial void OnContactTypeIdChanging(System.Int32 value);
		partial void OnContactTypeIdChanged();
		partial void OnModifiedDateChanging(System.DateTime value);
		partial void OnModifiedDateChanged();
		partial void OnVendorIdChanging(System.Int32 value);
		partial void OnVendorIdChanged();
		#endregion
		
		/// <summary>Initializes a new instance of the <see cref="VendorContact"/> class.</summary>
		public VendorContact()
		{
			_contact = default(EntityRef<Contact>);
			_contactType = default(EntityRef<ContactType>);
			_vendor = default(EntityRef<Vendor>);
			OnCreated();
		}

		/// <summary>Raises the PropertyChanging event</summary>
		/// <param name="propertyName">name of the property which is changing</param>
		protected virtual void SendPropertyChanging(string propertyName)
		{
			if((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, new PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>Raises the PropertyChanged event for the property specified</summary>
		/// <param name="propertyName">name of the property which was changed</param>
		protected virtual void SendPropertyChanged(string propertyName)
		{
			if((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		

		#region Class Property Declarations
		/// <summary>Gets or sets the ContactId field. Mapped on target field 'ContactID'. </summary>
		[Column(Name="ContactID", Storage="_contactId", CanBeNull=false, DbType="int NOT NULL", IsPrimaryKey=true)]
		public System.Int32 ContactId
		{
			get	{ return _contactId; }
			set
			{
				if((_contactId != value))
				{
					if(_contact.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					OnContactIdChanging(value);
					SendPropertyChanging("ContactId");
					_contactId = value;
					SendPropertyChanged("ContactId");
					OnContactIdChanged();
				}
			}
		}

		/// <summary>Gets or sets the ContactTypeId field. Mapped on target field 'ContactTypeID'. </summary>
		[Column(Name="ContactTypeID", Storage="_contactTypeId", CanBeNull=false, DbType="int NOT NULL")]
		public System.Int32 ContactTypeId
		{
			get	{ return _contactTypeId; }
			set
			{
				if((_contactTypeId != value))
				{
					if(_contactType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					OnContactTypeIdChanging(value);
					SendPropertyChanging("ContactTypeId");
					_contactTypeId = value;
					SendPropertyChanged("ContactTypeId");
					OnContactTypeIdChanged();
				}
			}
		}

		/// <summary>Gets or sets the ModifiedDate field. Mapped on target field 'ModifiedDate'. </summary>
		[Column(Name="ModifiedDate", Storage="_modifiedDate", CanBeNull=false, DbType="datetime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get	{ return _modifiedDate; }
			set
			{
				if((_modifiedDate != value))
				{
					OnModifiedDateChanging(value);
					SendPropertyChanging("ModifiedDate");
					_modifiedDate = value;
					SendPropertyChanged("ModifiedDate");
					OnModifiedDateChanged();
				}
			}
		}

		/// <summary>Gets or sets the VendorId field. Mapped on target field 'VendorID'. </summary>
		[Column(Name="VendorID", Storage="_vendorId", CanBeNull=false, DbType="int NOT NULL", IsPrimaryKey=true)]
		public System.Int32 VendorId
		{
			get	{ return _vendorId; }
			set
			{
				if((_vendorId != value))
				{
					if(_vendor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					OnVendorIdChanging(value);
					SendPropertyChanging("VendorId");
					_vendorId = value;
					SendPropertyChanged("VendorId");
					OnVendorIdChanged();
				}
			}
		}

		/// <summary>Represents the navigator which is mapped onto the association 'VendorContact.Contact - Contact.VendorContacts (m:1)'</summary>
		[Association(Name="VendorContact_Contact7699fed05c1f4d68b412badf9fbea85c", Storage="_contact", ThisKey="ContactId", IsForeignKey=true)] 
		public Contact Contact
		{
			get { return _contact.Entity; }
			set
			{
				Contact previousValue = _contact.Entity;
				if((previousValue != value) || (_contact.HasLoadedOrAssignedValue == false))
				{
					this.SendPropertyChanging("Contact");
					if(previousValue != null)
					{
						_contact.Entity = null;
						previousValue.VendorContacts.Remove(this);
					}
					_contact.Entity = value;
					if(value == null)
					{
						_contactId = default(System.Int32);
					}
					else
					{
						value.VendorContacts.Add(this);
						_contactId = value.ContactId;
					}
					this.SendPropertyChanged("Contact");
				}
			}
		}
		
		/// <summary>Represents the navigator which is mapped onto the association 'VendorContact.ContactType - ContactType.VendorContacts (m:1)'</summary>
		[Association(Name="VendorContact_ContactType04e342c152cc494eb9ef14709eb700d1", Storage="_contactType", ThisKey="ContactTypeId", IsForeignKey=true)] 
		public ContactType ContactType
		{
			get { return _contactType.Entity; }
			set
			{
				ContactType previousValue = _contactType.Entity;
				if((previousValue != value) || (_contactType.HasLoadedOrAssignedValue == false))
				{
					this.SendPropertyChanging("ContactType");
					if(previousValue != null)
					{
						_contactType.Entity = null;
						previousValue.VendorContacts.Remove(this);
					}
					_contactType.Entity = value;
					if(value == null)
					{
						_contactTypeId = default(System.Int32);
					}
					else
					{
						value.VendorContacts.Add(this);
						_contactTypeId = value.ContactTypeId;
					}
					this.SendPropertyChanged("ContactType");
				}
			}
		}
		
		/// <summary>Represents the navigator which is mapped onto the association 'VendorContact.Vendor - Vendor.VendorContacts (m:1)'</summary>
		[Association(Name="VendorContact_Vendor5a3c581c8dad430bb421560f317e7c4e", Storage="_vendor", ThisKey="VendorId", IsForeignKey=true)] 
		public Vendor Vendor
		{
			get { return _vendor.Entity; }
			set
			{
				Vendor previousValue = _vendor.Entity;
				if((previousValue != value) || (_vendor.HasLoadedOrAssignedValue == false))
				{
					this.SendPropertyChanging("Vendor");
					if(previousValue != null)
					{
						_vendor.Entity = null;
						previousValue.VendorContacts.Remove(this);
					}
					_vendor.Entity = value;
					if(value == null)
					{
						_vendorId = default(System.Int32);
					}
					else
					{
						value.VendorContacts.Add(this);
						_vendorId = value.VendorId;
					}
					this.SendPropertyChanged("Vendor");
				}
			}
		}
		
		#endregion
	}
}
#pragma warning restore 0649
#pragma warning disable 0649
//------------------------------------------------------------------------------
// <auto-generated>This code was generated by LLBLGen Pro v4.1.</auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.ComponentModel;

namespace L2S.Bencher.EntityClasses
{
	/// <summary>Class which represents the entity 'ShoppingCartItem', mapped on table 'AdventureWorks.Sales.ShoppingCartItem'.</summary>
	[Table(Name="[Sales].[ShoppingCartItem]")]
	public partial class ShoppingCartItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		#region Events
		/// <summary>Event which is raised when a property value is changing.</summary>
		public event PropertyChangingEventHandler PropertyChanging;
		/// <summary>Event which is raised when a property value changes.</summary>
		public event PropertyChangedEventHandler PropertyChanged;
		#endregion
		
		#region Class Member Declarations
		private System.DateTime	_dateCreated;
		private System.DateTime	_modifiedDate;
		private System.Int32	_productId;
		private System.Int32	_quantity;
		private System.String	_shoppingCartId;
		private System.Int32	_shoppingCartItemId;
		private EntityRef <Product> _product;
		#endregion
		
		#region Extensibility Method Definitions
		partial void OnLoaded();
		partial void OnValidate(System.Data.Linq.ChangeAction action);
		partial void OnCreated();
		partial void OnDateCreatedChanging(System.DateTime value);
		partial void OnDateCreatedChanged();
		partial void OnModifiedDateChanging(System.DateTime value);
		partial void OnModifiedDateChanged();
		partial void OnProductIdChanging(System.Int32 value);
		partial void OnProductIdChanged();
		partial void OnQuantityChanging(System.Int32 value);
		partial void OnQuantityChanged();
		partial void OnShoppingCartIdChanging(System.String value);
		partial void OnShoppingCartIdChanged();
		partial void OnShoppingCartItemIdChanging(System.Int32 value);
		partial void OnShoppingCartItemIdChanged();
		#endregion
		
		/// <summary>Initializes a new instance of the <see cref="ShoppingCartItem"/> class.</summary>
		public ShoppingCartItem()
		{
			_product = default(EntityRef<Product>);
			OnCreated();
		}

		/// <summary>Raises the PropertyChanging event</summary>
		/// <param name="propertyName">name of the property which is changing</param>
		protected virtual void SendPropertyChanging(string propertyName)
		{
			if((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, new PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>Raises the PropertyChanged event for the property specified</summary>
		/// <param name="propertyName">name of the property which was changed</param>
		protected virtual void SendPropertyChanged(string propertyName)
		{
			if((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		

		#region Class Property Declarations
		/// <summary>Gets or sets the DateCreated field. Mapped on target field 'DateCreated'. </summary>
		[Column(Name="DateCreated", Storage="_dateCreated", CanBeNull=false, DbType="datetime NOT NULL")]
		public System.DateTime DateCreated
		{
			get	{ return _dateCreated; }
			set
			{
				if((_dateCreated != value))
				{
					OnDateCreatedChanging(value);
					SendPropertyChanging("DateCreated");
					_dateCreated = value;
					SendPropertyChanged("DateCreated");
					OnDateCreatedChanged();
				}
			}
		}

		/// <summary>Gets or sets the ModifiedDate field. Mapped on target field 'ModifiedDate'. </summary>
		[Column(Name="ModifiedDate", Storage="_modifiedDate", CanBeNull=false, DbType="datetime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get	{ return _modifiedDate; }
			set
			{
				if((_modifiedDate != value))
				{
					OnModifiedDateChanging(value);
					SendPropertyChanging("ModifiedDate");
					_modifiedDate = value;
					SendPropertyChanged("ModifiedDate");
					OnModifiedDateChanged();
				}
			}
		}

		/// <summary>Gets or sets the ProductId field. Mapped on target field 'ProductID'. </summary>
		[Column(Name="ProductID", Storage="_productId", CanBeNull=false, DbType="int NOT NULL")]
		public System.Int32 ProductId
		{
			get	{ return _productId; }
			set
			{
				if((_productId != value))
				{
					if(_product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					OnProductIdChanging(value);
					SendPropertyChanging("ProductId");
					_productId = value;
					SendPropertyChanged("ProductId");
					OnProductIdChanged();
				}
			}
		}

		/// <summary>Gets or sets the Quantity field. Mapped on target field 'Quantity'. </summary>
		[Column(Name="Quantity", Storage="_quantity", CanBeNull=false, DbType="int NOT NULL")]
		public System.Int32 Quantity
		{
			get	{ return _quantity; }
			set
			{
				if((_quantity != value))
				{
					OnQuantityChanging(value);
					SendPropertyChanging("Quantity");
					_quantity = value;
					SendPropertyChanged("Quantity");
					OnQuantityChanged();
				}
			}
		}

		/// <summary>Gets or sets the ShoppingCartId field. Mapped on target field 'ShoppingCartID'. </summary>
		[Column(Name="ShoppingCartID", Storage="_shoppingCartId", CanBeNull=false, DbType="nvarchar(50) NOT NULL")]
		public System.String ShoppingCartId
		{
			get	{ return _shoppingCartId; }
			set
			{
				if((_shoppingCartId != value))
				{
					OnShoppingCartIdChanging(value);
					SendPropertyChanging("ShoppingCartId");
					_shoppingCartId = value;
					SendPropertyChanged("ShoppingCartId");
					OnShoppingCartIdChanged();
				}
			}
		}

		/// <summary>Gets or sets the ShoppingCartItemId field. Mapped on target field 'ShoppingCartItemID'. </summary>
		[Column(Name="ShoppingCartItemID", Storage="_shoppingCartItemId", AutoSync=AutoSync.OnInsert, CanBeNull=false, DbType="int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public System.Int32 ShoppingCartItemId
		{
			get	{ return _shoppingCartItemId; }
			set
			{
				if((_shoppingCartItemId != value))
				{
					OnShoppingCartItemIdChanging(value);
					SendPropertyChanging("ShoppingCartItemId");
					_shoppingCartItemId = value;
					SendPropertyChanged("ShoppingCartItemId");
					OnShoppingCartItemIdChanged();
				}
			}
		}

		/// <summary>Represents the navigator which is mapped onto the association 'ShoppingCartItem.Product - Product.ShoppingCartItems (m:1)'</summary>
		[Association(Name="ShoppingCartItem_Product8aae5cee1d734699b568ce5c339a534b", Storage="_product", ThisKey="ProductId", IsForeignKey=true)] 
		public Product Product
		{
			get { return _product.Entity; }
			set
			{
				Product previousValue = _product.Entity;
				if((previousValue != value) || (_product.HasLoadedOrAssignedValue == false))
				{
					this.SendPropertyChanging("Product");
					if(previousValue != null)
					{
						_product.Entity = null;
						previousValue.ShoppingCartItems.Remove(this);
					}
					_product.Entity = value;
					if(value == null)
					{
						_productId = default(System.Int32);
					}
					else
					{
						value.ShoppingCartItems.Add(this);
						_productId = value.ProductId;
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		#endregion
	}
}
#pragma warning restore 0649
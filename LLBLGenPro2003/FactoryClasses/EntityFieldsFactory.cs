///////////////////////////////////////////////////////////////
// This is generated code. If you modify this code, be aware
// of the fact that when you re-generate the code, your changes
// are lost. If you want to keep your changes, make this file read-only
// when you have finished your changes, however it is recommended that
// you inherit from this class to extend the functionality of this generated
// class or you modify / extend the templates used to generate this code.
//
// Do not try to run this code on another version of the database than the database
// which was used to generate this code. This means that when you used f.e. SqlServer 2000
// to generate this code, it is likely that you will not be able to use that code on
// SqlServer 7 due to SQL syntax mismatches. Most code is generic code which will work
// with any database, but some code relies on a specific database type/vendor/version used. 
// This code is located in the DaoClasses which target a specific specified database. Also all
// classes target a specific specified Dynamic Query Engine (DQE) in the using/imports
// directives. 
//////////////////////////////////////////////////////////////
// Code is generated using LLBLGen Pro version: 1.0.2003.1
// Code is generated on: woensdag 4 september 2019 12:09:46
// Code is generated using templates: C# template set for SqlServer
// Templates vendor: Solutions Design.
// Templates version: 1.0.2003.3.061104
//////////////////////////////////////////////////////////////
using System;
using System.Data;

using LLBL2003.AdventureWorks2008;

using SD.LLBLGen.Pro.ORMSupportClasses2003;

namespace LLBL2003.AdventureWorks2008.FactoryClasses
{
	/// <summary>
	/// Generates IEntityFields instances for different kind of Entities. 
	/// This class is generated. Do not modify.
	/// </summary>
	public class EntityFieldsFactory
	{
		/// <summary>
		/// Private CTor, no instantiation possible.
		/// </summary>
		private EntityFieldsFactory()
		{
		}

	
		/// <summary>
		/// General factory entrance method which will return an EntityFields object with the format generated by the
		/// factory specified
		/// </summary>
		/// <param name="relatedEntityType">The type of entity the fields are for</param>
		/// <returns>The IEntityFields instance requested</returns>
		public static IEntityFields CreateEntityFieldsObject(EntityType relatedEntityType)
		{
			IEntityFields fieldsToReturn=null;

			switch(relatedEntityType)
			{
				
				case EntityType.AddressEntity:
					fieldsToReturn = CreateAddressEntityFields();
					break;

				case EntityType.AddressTypeEntity:
					fieldsToReturn = CreateAddressTypeEntityFields();
					break;

				case EntityType.AWBuildVersionEntity:
					fieldsToReturn = CreateAWBuildVersionEntityFields();
					break;

				case EntityType.BillOfMaterialsEntity:
					fieldsToReturn = CreateBillOfMaterialsEntityFields();
					break;

				case EntityType.ContactEntity:
					fieldsToReturn = CreateContactEntityFields();
					break;

				case EntityType.ContactCreditCardEntity:
					fieldsToReturn = CreateContactCreditCardEntityFields();
					break;

				case EntityType.ContactTypeEntity:
					fieldsToReturn = CreateContactTypeEntityFields();
					break;

				case EntityType.CountryRegionEntity:
					fieldsToReturn = CreateCountryRegionEntityFields();
					break;

				case EntityType.CountryRegionCurrencyEntity:
					fieldsToReturn = CreateCountryRegionCurrencyEntityFields();
					break;

				case EntityType.CreativeAddressesEntity:
					fieldsToReturn = CreateCreativeAddressesEntityFields();
					break;

				case EntityType.CreditCardEntity:
					fieldsToReturn = CreateCreditCardEntityFields();
					break;

				case EntityType.CultureEntity:
					fieldsToReturn = CreateCultureEntityFields();
					break;

				case EntityType.CurrencyEntity:
					fieldsToReturn = CreateCurrencyEntityFields();
					break;

				case EntityType.CurrencyRateEntity:
					fieldsToReturn = CreateCurrencyRateEntityFields();
					break;

				case EntityType.CustomerEntity:
					fieldsToReturn = CreateCustomerEntityFields();
					break;

				case EntityType.CustomerAddressEntity:
					fieldsToReturn = CreateCustomerAddressEntityFields();
					break;

				case EntityType.DatabaseLogEntity:
					fieldsToReturn = CreateDatabaseLogEntityFields();
					break;

				case EntityType.DepartmentEntity:
					fieldsToReturn = CreateDepartmentEntityFields();
					break;

				case EntityType.DocumentEntity:
					fieldsToReturn = CreateDocumentEntityFields();
					break;

				case EntityType.EmployeeEntity:
					fieldsToReturn = CreateEmployeeEntityFields();
					break;

				case EntityType.EmployeeAddressEntity:
					fieldsToReturn = CreateEmployeeAddressEntityFields();
					break;

				case EntityType.EmployeeDepartmentHistoryEntity:
					fieldsToReturn = CreateEmployeeDepartmentHistoryEntityFields();
					break;

				case EntityType.EmployeePayHistoryEntity:
					fieldsToReturn = CreateEmployeePayHistoryEntityFields();
					break;

				case EntityType.ErrorLogEntity:
					fieldsToReturn = CreateErrorLogEntityFields();
					break;

				case EntityType.IllustrationEntity:
					fieldsToReturn = CreateIllustrationEntityFields();
					break;

				case EntityType.IndividualEntity:
					fieldsToReturn = CreateIndividualEntityFields();
					break;

				case EntityType.JobCandidateEntity:
					fieldsToReturn = CreateJobCandidateEntityFields();
					break;

				case EntityType.LocationEntity:
					fieldsToReturn = CreateLocationEntityFields();
					break;

				case EntityType.NameTestTabEntity:
					fieldsToReturn = CreateNameTestTabEntityFields();
					break;

				case EntityType.NewSequentialIDTestEntity:
					fieldsToReturn = CreateNewSequentialIDTestEntityFields();
					break;

				case EntityType.NonPresentTimeEntity:
					fieldsToReturn = CreateNonPresentTimeEntityFields();
					break;

				case EntityType.NonPresentTimeHeaderEntity:
					fieldsToReturn = CreateNonPresentTimeHeaderEntityFields();
					break;

				case EntityType.ProductEntity:
					fieldsToReturn = CreateProductEntityFields();
					break;

				case EntityType.ProductCategoryEntity:
					fieldsToReturn = CreateProductCategoryEntityFields();
					break;

				case EntityType.ProductCostHistoryEntity:
					fieldsToReturn = CreateProductCostHistoryEntityFields();
					break;

				case EntityType.ProductDescriptionEntity:
					fieldsToReturn = CreateProductDescriptionEntityFields();
					break;

				case EntityType.ProductDocumentEntity:
					fieldsToReturn = CreateProductDocumentEntityFields();
					break;

				case EntityType.ProductInventoryEntity:
					fieldsToReturn = CreateProductInventoryEntityFields();
					break;

				case EntityType.ProductListPriceHistoryEntity:
					fieldsToReturn = CreateProductListPriceHistoryEntityFields();
					break;

				case EntityType.ProductModelEntity:
					fieldsToReturn = CreateProductModelEntityFields();
					break;

				case EntityType.ProductModelIllustrationEntity:
					fieldsToReturn = CreateProductModelIllustrationEntityFields();
					break;

				case EntityType.ProductModelProductDescriptionCultureEntity:
					fieldsToReturn = CreateProductModelProductDescriptionCultureEntityFields();
					break;

				case EntityType.ProductPhotoEntity:
					fieldsToReturn = CreateProductPhotoEntityFields();
					break;

				case EntityType.ProductProductPhotoEntity:
					fieldsToReturn = CreateProductProductPhotoEntityFields();
					break;

				case EntityType.ProductReviewEntity:
					fieldsToReturn = CreateProductReviewEntityFields();
					break;

				case EntityType.ProductSubcategoryEntity:
					fieldsToReturn = CreateProductSubcategoryEntityFields();
					break;

				case EntityType.ProductVendorEntity:
					fieldsToReturn = CreateProductVendorEntityFields();
					break;

				case EntityType.PurchaseOrderDetailEntity:
					fieldsToReturn = CreatePurchaseOrderDetailEntityFields();
					break;

				case EntityType.PurchaseOrderHeaderEntity:
					fieldsToReturn = CreatePurchaseOrderHeaderEntityFields();
					break;

				case EntityType.ReasonEntity:
					fieldsToReturn = CreateReasonEntityFields();
					break;

				case EntityType.SalesOrderDetailEntity:
					fieldsToReturn = CreateSalesOrderDetailEntityFields();
					break;

				case EntityType.SalesOrderHeaderEntity:
					fieldsToReturn = CreateSalesOrderHeaderEntityFields();
					break;

				case EntityType.SalesOrderHeaderSalesReasonEntity:
					fieldsToReturn = CreateSalesOrderHeaderSalesReasonEntityFields();
					break;

				case EntityType.SalesPersonEntity:
					fieldsToReturn = CreateSalesPersonEntityFields();
					break;

				case EntityType.SalesPersonQuotaHistoryEntity:
					fieldsToReturn = CreateSalesPersonQuotaHistoryEntityFields();
					break;

				case EntityType.SalesReasonEntity:
					fieldsToReturn = CreateSalesReasonEntityFields();
					break;

				case EntityType.SalesTaxRateEntity:
					fieldsToReturn = CreateSalesTaxRateEntityFields();
					break;

				case EntityType.SalesTerritoryEntity:
					fieldsToReturn = CreateSalesTerritoryEntityFields();
					break;

				case EntityType.SalesTerritoryHistoryEntity:
					fieldsToReturn = CreateSalesTerritoryHistoryEntityFields();
					break;

				case EntityType.ScrapReasonEntity:
					fieldsToReturn = CreateScrapReasonEntityFields();
					break;

				case EntityType.SequentialIDSubTypeEntity:
					fieldsToReturn = CreateSequentialIDSubTypeEntityFields();
					break;

				case EntityType.ShiftEntity:
					fieldsToReturn = CreateShiftEntityFields();
					break;

				case EntityType.ShipMethodEntity:
					fieldsToReturn = CreateShipMethodEntityFields();
					break;

				case EntityType.ShoppingCartItemEntity:
					fieldsToReturn = CreateShoppingCartItemEntityFields();
					break;

				case EntityType.SpecialOfferEntity:
					fieldsToReturn = CreateSpecialOfferEntityFields();
					break;

				case EntityType.SpecialOfferProductEntity:
					fieldsToReturn = CreateSpecialOfferProductEntityFields();
					break;

				case EntityType.StateProvinceEntity:
					fieldsToReturn = CreateStateProvinceEntityFields();
					break;

				case EntityType.StoreEntity:
					fieldsToReturn = CreateStoreEntityFields();
					break;

				case EntityType.StoreContactEntity:
					fieldsToReturn = CreateStoreContactEntityFields();
					break;

				case EntityType.TransactionHistoryEntity:
					fieldsToReturn = CreateTransactionHistoryEntityFields();
					break;

				case EntityType.TransactionHistoryArchiveEntity:
					fieldsToReturn = CreateTransactionHistoryArchiveEntityFields();
					break;

				case EntityType.UdtTestEntity:
					fieldsToReturn = CreateUdtTestEntityFields();
					break;

				case EntityType.UnitMeasureEntity:
					fieldsToReturn = CreateUnitMeasureEntityFields();
					break;

				case EntityType.UserDetailEntity:
					fieldsToReturn = CreateUserDetailEntityFields();
					break;

				case EntityType.VendorEntity:
					fieldsToReturn = CreateVendorEntityFields();
					break;

				case EntityType.VendorAddressEntity:
					fieldsToReturn = CreateVendorAddressEntityFields();
					break;

				case EntityType.VendorContactEntity:
					fieldsToReturn = CreateVendorContactEntityFields();
					break;

				case EntityType.WorkOrderEntity:
					fieldsToReturn = CreateWorkOrderEntityFields();
					break;

				case EntityType.WorkOrderRoutingEntity:
					fieldsToReturn = CreateWorkOrderRoutingEntityFields();
					break;
			}

			return fieldsToReturn;
		}
	
	
	
		/// <summary>
		/// Creates a complete EntityFields instance for the AddressEntity.
		/// </summary>
		/// <returns></returns>
		private static IEntityFields CreateAddressEntityFields()
		{
			IEntityFields fieldsToReturn = new EntityFields((int)AddressFieldIndex.AmountOfFields);

			for(int i=0;i<(int)AddressFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((AddressFieldIndex)i);
			}

			return fieldsToReturn;
		}

	

		/// <summary>
		/// Creates a complete EntityFields instance for the AddressTypeEntity.
		/// </summary>
		/// <returns></returns>
		private static IEntityFields CreateAddressTypeEntityFields()
		{
			IEntityFields fieldsToReturn = new EntityFields((int)AddressTypeFieldIndex.AmountOfFields);

			for(int i=0;i<(int)AddressTypeFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((AddressTypeFieldIndex)i);
			}

			return fieldsToReturn;
		}

	

		/// <summary>
		/// Creates a complete EntityFields instance for the AWBuildVersionEntity.
		/// </summary>
		/// <returns></returns>
		private static IEntityFields CreateAWBuildVersionEntityFields()
		{
			IEntityFields fieldsToReturn = new EntityFields((int)AWBuildVersionFieldIndex.AmountOfFields);

			for(int i=0;i<(int)AWBuildVersionFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((AWBuildVersionFieldIndex)i);
			}

			return fieldsToReturn;
		}

	

		/// <summary>
		/// Creates a complete EntityFields instance for the BillOfMaterialsEntity.
		/// </summary>
		/// <returns></returns>
		private static IEntityFields CreateBillOfMaterialsEntityFields()
		{
			IEntityFields fieldsToReturn = new EntityFields((int)BillOfMaterialsFieldIndex.AmountOfFields);

			for(int i=0;i<(int)BillOfMaterialsFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((BillOfMaterialsFieldIndex)i);
			}

			return fieldsToReturn;
		}

	

		/// <summary>
		/// Creates a complete EntityFields instance for the ContactEntity.
		/// </summary>
		/// <returns></returns>
		private static IEntityFields CreateContactEntityFields()
		{
			IEntityFields fieldsToReturn = new EntityFields((int)ContactFieldIndex.AmountOfFields);

			for(int i=0;i<(int)ContactFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((ContactFieldIndex)i);
			}

			return fieldsToReturn;
		}

	

		/// <summary>
		/// Creates a complete EntityFields instance for the ContactCreditCardEntity.
		/// </summary>
		/// <returns></returns>
		private static IEntityFields CreateContactCreditCardEntityFields()
		{
			IEntityFields fieldsToReturn = new EntityFields((int)ContactCreditCardFieldIndex.AmountOfFields);

			for(int i=0;i<(int)ContactCreditCardFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((ContactCreditCardFieldIndex)i);
			}

			return fieldsToReturn;
		}

	

		/// <summary>
		/// Creates a complete EntityFields instance for the ContactTypeEntity.
		/// </summary>
		/// <returns></returns>
		private static IEntityFields CreateContactTypeEntityFields()
		{
			IEntityFields fieldsToReturn = new EntityFields((int)ContactTypeFieldIndex.AmountOfFields);

			for(int i=0;i<(int)ContactTypeFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((ContactTypeFieldIndex)i);
			}

			return fieldsToReturn;
		}

	

		/// <summary>
		/// Creates a complete EntityFields instance for the CountryRegionEntity.
		/// </summary>
		/// <returns></returns>
		private static IEntityFields CreateCountryRegionEntityFields()
		{
			IEntityFields fieldsToReturn = new EntityFields((int)CountryRegionFieldIndex.AmountOfFields);

			for(int i=0;i<(int)CountryRegionFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((CountryRegionFieldIndex)i);
			}

			return fieldsToReturn;
		}

	

		/// <summary>
		/// Creates a complete EntityFields instance for the CountryRegionCurrencyEntity.
		/// </summary>
		/// <returns></returns>
		private static IEntityFields CreateCountryRegionCurrencyEntityFields()
		{
			IEntityFields fieldsToReturn = new EntityFields((int)CountryRegionCurrencyFieldIndex.AmountOfFields);

			for(int i=0;i<(int)CountryRegionCurrencyFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((CountryRegionCurrencyFieldIndex)i);
			}

			return fieldsToReturn;
		}

	

		/// <summary>
		/// Creates a complete EntityFields instance for the CreativeAddressesEntity.
		/// </summary>
		/// <returns></returns>
		private static IEntityFields CreateCreativeAddressesEntityFields()
		{
			IEntityFields fieldsToReturn = new EntityFields((int)CreativeAddressesFieldIndex.AmountOfFields);

			for(int i=0;i<(int)CreativeAddressesFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((CreativeAddressesFieldIndex)i);
			}

			return fieldsToReturn;
		}

	

		/// <summary>
		/// Creates a complete EntityFields instance for the CreditCardEntity.
		/// </summary>
		/// <returns></returns>
		private static IEntityFields CreateCreditCardEntityFields()
		{
			IEntityFields fieldsToReturn = new EntityFields((int)CreditCardFieldIndex.AmountOfFields);

			for(int i=0;i<(int)CreditCardFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((CreditCardFieldIndex)i);
			}

			return fieldsToReturn;
		}

	

		/// <summary>
		/// Creates a complete EntityFields instance for the CultureEntity.
		/// </summary>
		/// <returns></returns>
		private static IEntityFields CreateCultureEntityFields()
		{
			IEntityFields fieldsToReturn = new EntityFields((int)CultureFieldIndex.AmountOfFields);

			for(int i=0;i<(int)CultureFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((CultureFieldIndex)i);
			}

			return fieldsToReturn;
		}

	

		/// <summary>
		/// Creates a complete EntityFields instance for the CurrencyEntity.
		/// </summary>
		/// <returns></returns>
		private static IEntityFields CreateCurrencyEntityFields()
		{
			IEntityFields fieldsToReturn = new EntityFields((int)CurrencyFieldIndex.AmountOfFields);

			for(int i=0;i<(int)CurrencyFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((CurrencyFieldIndex)i);
			}

			return fieldsToReturn;
		}

	

		/// <summary>
		/// Creates a complete EntityFields instance for the CurrencyRateEntity.
		/// </summary>
		/// <returns></returns>
		private static IEntityFields CreateCurrencyRateEntityFields()
		{
			IEntityFields fieldsToReturn = new EntityFields((int)CurrencyRateFieldIndex.AmountOfFields);

			for(int i=0;i<(int)CurrencyRateFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((CurrencyRateFieldIndex)i);
			}

			return fieldsToReturn;
		}

	

		/// <summary>
		/// Creates a complete EntityFields instance for the CustomerEntity.
		/// </summary>
		/// <returns></returns>
		private static IEntityFields CreateCustomerEntityFields()
		{
			IEntityFields fieldsToReturn = new EntityFields((int)CustomerFieldIndex.AmountOfFields);

			for(int i=0;i<(int)CustomerFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((CustomerFieldIndex)i);
			}

			return fieldsToReturn;
		}

	

		/// <summary>
		/// Creates a complete EntityFields instance for the CustomerAddressEntity.
		/// </summary>
		/// <returns></returns>
		private static IEntityFields CreateCustomerAddressEntityFields()
		{
			IEntityFields fieldsToReturn = new EntityFields((int)CustomerAddressFieldIndex.AmountOfFields);

			for(int i=0;i<(int)CustomerAddressFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((CustomerAddressFieldIndex)i);
			}

			return fieldsToReturn;
		}

	

		/// <summary>
		/// Creates a complete EntityFields instance for the DatabaseLogEntity.
		/// </summary>
		/// <returns></returns>
		private static IEntityFields CreateDatabaseLogEntityFields()
		{
			IEntityFields fieldsToReturn = new EntityFields((int)DatabaseLogFieldIndex.AmountOfFields);

			for(int i=0;i<(int)DatabaseLogFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((DatabaseLogFieldIndex)i);
			}

			return fieldsToReturn;
		}

	

		/// <summary>
		/// Creates a complete EntityFields instance for the DepartmentEntity.
		/// </summary>
		/// <returns></returns>
		private static IEntityFields CreateDepartmentEntityFields()
		{
			IEntityFields fieldsToReturn = new EntityFields((int)DepartmentFieldIndex.AmountOfFields);

			for(int i=0;i<(int)DepartmentFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((DepartmentFieldIndex)i);
			}

			return fieldsToReturn;
		}

	

		/// <summary>
		/// Creates a complete EntityFields instance for the DocumentEntity.
		/// </summary>
		/// <returns></returns>
		private static IEntityFields CreateDocumentEntityFields()
		{
			IEntityFields fieldsToReturn = new EntityFields((int)DocumentFieldIndex.AmountOfFields);

			for(int i=0;i<(int)DocumentFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((DocumentFieldIndex)i);
			}

			return fieldsToReturn;
		}

	

		/// <summary>
		/// Creates a complete EntityFields instance for the EmployeeEntity.
		/// </summary>
		/// <returns></returns>
		private static IEntityFields CreateEmployeeEntityFields()
		{
			IEntityFields fieldsToReturn = new EntityFields((int)EmployeeFieldIndex.AmountOfFields);

			for(int i=0;i<(int)EmployeeFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((EmployeeFieldIndex)i);
			}

			return fieldsToReturn;
		}

	

		/// <summary>
		/// Creates a complete EntityFields instance for the EmployeeAddressEntity.
		/// </summary>
		/// <returns></returns>
		private static IEntityFields CreateEmployeeAddressEntityFields()
		{
			IEntityFields fieldsToReturn = new EntityFields((int)EmployeeAddressFieldIndex.AmountOfFields);

			for(int i=0;i<(int)EmployeeAddressFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((EmployeeAddressFieldIndex)i);
			}

			return fieldsToReturn;
		}

	

		/// <summary>
		/// Creates a complete EntityFields instance for the EmployeeDepartmentHistoryEntity.
		/// </summary>
		/// <returns></returns>
		private static IEntityFields CreateEmployeeDepartmentHistoryEntityFields()
		{
			IEntityFields fieldsToReturn = new EntityFields((int)EmployeeDepartmentHistoryFieldIndex.AmountOfFields);

			for(int i=0;i<(int)EmployeeDepartmentHistoryFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((EmployeeDepartmentHistoryFieldIndex)i);
			}

			return fieldsToReturn;
		}

	

		/// <summary>
		/// Creates a complete EntityFields instance for the EmployeePayHistoryEntity.
		/// </summary>
		/// <returns></returns>
		private static IEntityFields CreateEmployeePayHistoryEntityFields()
		{
			IEntityFields fieldsToReturn = new EntityFields((int)EmployeePayHistoryFieldIndex.AmountOfFields);

			for(int i=0;i<(int)EmployeePayHistoryFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((EmployeePayHistoryFieldIndex)i);
			}

			return fieldsToReturn;
		}

	

		/// <summary>
		/// Creates a complete EntityFields instance for the ErrorLogEntity.
		/// </summary>
		/// <returns></returns>
		private static IEntityFields CreateErrorLogEntityFields()
		{
			IEntityFields fieldsToReturn = new EntityFields((int)ErrorLogFieldIndex.AmountOfFields);

			for(int i=0;i<(int)ErrorLogFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((ErrorLogFieldIndex)i);
			}

			return fieldsToReturn;
		}

	

		/// <summary>
		/// Creates a complete EntityFields instance for the IllustrationEntity.
		/// </summary>
		/// <returns></returns>
		private static IEntityFields CreateIllustrationEntityFields()
		{
			IEntityFields fieldsToReturn = new EntityFields((int)IllustrationFieldIndex.AmountOfFields);

			for(int i=0;i<(int)IllustrationFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((IllustrationFieldIndex)i);
			}

			return fieldsToReturn;
		}

	

		/// <summary>
		/// Creates a complete EntityFields instance for the IndividualEntity.
		/// </summary>
		/// <returns></returns>
		private static IEntityFields CreateIndividualEntityFields()
		{
			IEntityFields fieldsToReturn = new EntityFields((int)IndividualFieldIndex.AmountOfFields);

			for(int i=0;i<(int)IndividualFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((IndividualFieldIndex)i);
			}

			return fieldsToReturn;
		}

	

		/// <summary>
		/// Creates a complete EntityFields instance for the JobCandidateEntity.
		/// </summary>
		/// <returns></returns>
		private static IEntityFields CreateJobCandidateEntityFields()
		{
			IEntityFields fieldsToReturn = new EntityFields((int)JobCandidateFieldIndex.AmountOfFields);

			for(int i=0;i<(int)JobCandidateFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((JobCandidateFieldIndex)i);
			}

			return fieldsToReturn;
		}

	

		/// <summary>
		/// Creates a complete EntityFields instance for the LocationEntity.
		/// </summary>
		/// <returns></returns>
		private static IEntityFields CreateLocationEntityFields()
		{
			IEntityFields fieldsToReturn = new EntityFields((int)LocationFieldIndex.AmountOfFields);

			for(int i=0;i<(int)LocationFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((LocationFieldIndex)i);
			}

			return fieldsToReturn;
		}

	

		/// <summary>
		/// Creates a complete EntityFields instance for the NameTestTabEntity.
		/// </summary>
		/// <returns></returns>
		private static IEntityFields CreateNameTestTabEntityFields()
		{
			IEntityFields fieldsToReturn = new EntityFields((int)NameTestTabFieldIndex.AmountOfFields);

			for(int i=0;i<(int)NameTestTabFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((NameTestTabFieldIndex)i);
			}

			return fieldsToReturn;
		}

	

		/// <summary>
		/// Creates a complete EntityFields instance for the NewSequentialIDTestEntity.
		/// </summary>
		/// <returns></returns>
		private static IEntityFields CreateNewSequentialIDTestEntityFields()
		{
			IEntityFields fieldsToReturn = new EntityFields((int)NewSequentialIDTestFieldIndex.AmountOfFields);

			for(int i=0;i<(int)NewSequentialIDTestFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((NewSequentialIDTestFieldIndex)i);
			}

			return fieldsToReturn;
		}

	

		/// <summary>
		/// Creates a complete EntityFields instance for the NonPresentTimeEntity.
		/// </summary>
		/// <returns></returns>
		private static IEntityFields CreateNonPresentTimeEntityFields()
		{
			IEntityFields fieldsToReturn = new EntityFields((int)NonPresentTimeFieldIndex.AmountOfFields);

			for(int i=0;i<(int)NonPresentTimeFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((NonPresentTimeFieldIndex)i);
			}

			return fieldsToReturn;
		}

	

		/// <summary>
		/// Creates a complete EntityFields instance for the NonPresentTimeHeaderEntity.
		/// </summary>
		/// <returns></returns>
		private static IEntityFields CreateNonPresentTimeHeaderEntityFields()
		{
			IEntityFields fieldsToReturn = new EntityFields((int)NonPresentTimeHeaderFieldIndex.AmountOfFields);

			for(int i=0;i<(int)NonPresentTimeHeaderFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((NonPresentTimeHeaderFieldIndex)i);
			}

			return fieldsToReturn;
		}

	

		/// <summary>
		/// Creates a complete EntityFields instance for the ProductEntity.
		/// </summary>
		/// <returns></returns>
		private static IEntityFields CreateProductEntityFields()
		{
			IEntityFields fieldsToReturn = new EntityFields((int)ProductFieldIndex.AmountOfFields);

			for(int i=0;i<(int)ProductFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((ProductFieldIndex)i);
			}

			return fieldsToReturn;
		}

	

		/// <summary>
		/// Creates a complete EntityFields instance for the ProductCategoryEntity.
		/// </summary>
		/// <returns></returns>
		private static IEntityFields CreateProductCategoryEntityFields()
		{
			IEntityFields fieldsToReturn = new EntityFields((int)ProductCategoryFieldIndex.AmountOfFields);

			for(int i=0;i<(int)ProductCategoryFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((ProductCategoryFieldIndex)i);
			}

			return fieldsToReturn;
		}

	

		/// <summary>
		/// Creates a complete EntityFields instance for the ProductCostHistoryEntity.
		/// </summary>
		/// <returns></returns>
		private static IEntityFields CreateProductCostHistoryEntityFields()
		{
			IEntityFields fieldsToReturn = new EntityFields((int)ProductCostHistoryFieldIndex.AmountOfFields);

			for(int i=0;i<(int)ProductCostHistoryFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((ProductCostHistoryFieldIndex)i);
			}

			return fieldsToReturn;
		}

	

		/// <summary>
		/// Creates a complete EntityFields instance for the ProductDescriptionEntity.
		/// </summary>
		/// <returns></returns>
		private static IEntityFields CreateProductDescriptionEntityFields()
		{
			IEntityFields fieldsToReturn = new EntityFields((int)ProductDescriptionFieldIndex.AmountOfFields);

			for(int i=0;i<(int)ProductDescriptionFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((ProductDescriptionFieldIndex)i);
			}

			return fieldsToReturn;
		}

	

		/// <summary>
		/// Creates a complete EntityFields instance for the ProductDocumentEntity.
		/// </summary>
		/// <returns></returns>
		private static IEntityFields CreateProductDocumentEntityFields()
		{
			IEntityFields fieldsToReturn = new EntityFields((int)ProductDocumentFieldIndex.AmountOfFields);

			for(int i=0;i<(int)ProductDocumentFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((ProductDocumentFieldIndex)i);
			}

			return fieldsToReturn;
		}

	

		/// <summary>
		/// Creates a complete EntityFields instance for the ProductInventoryEntity.
		/// </summary>
		/// <returns></returns>
		private static IEntityFields CreateProductInventoryEntityFields()
		{
			IEntityFields fieldsToReturn = new EntityFields((int)ProductInventoryFieldIndex.AmountOfFields);

			for(int i=0;i<(int)ProductInventoryFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((ProductInventoryFieldIndex)i);
			}

			return fieldsToReturn;
		}

	

		/// <summary>
		/// Creates a complete EntityFields instance for the ProductListPriceHistoryEntity.
		/// </summary>
		/// <returns></returns>
		private static IEntityFields CreateProductListPriceHistoryEntityFields()
		{
			IEntityFields fieldsToReturn = new EntityFields((int)ProductListPriceHistoryFieldIndex.AmountOfFields);

			for(int i=0;i<(int)ProductListPriceHistoryFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((ProductListPriceHistoryFieldIndex)i);
			}

			return fieldsToReturn;
		}

	

		/// <summary>
		/// Creates a complete EntityFields instance for the ProductModelEntity.
		/// </summary>
		/// <returns></returns>
		private static IEntityFields CreateProductModelEntityFields()
		{
			IEntityFields fieldsToReturn = new EntityFields((int)ProductModelFieldIndex.AmountOfFields);

			for(int i=0;i<(int)ProductModelFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((ProductModelFieldIndex)i);
			}

			return fieldsToReturn;
		}

	

		/// <summary>
		/// Creates a complete EntityFields instance for the ProductModelIllustrationEntity.
		/// </summary>
		/// <returns></returns>
		private static IEntityFields CreateProductModelIllustrationEntityFields()
		{
			IEntityFields fieldsToReturn = new EntityFields((int)ProductModelIllustrationFieldIndex.AmountOfFields);

			for(int i=0;i<(int)ProductModelIllustrationFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((ProductModelIllustrationFieldIndex)i);
			}

			return fieldsToReturn;
		}

	

		/// <summary>
		/// Creates a complete EntityFields instance for the ProductModelProductDescriptionCultureEntity.
		/// </summary>
		/// <returns></returns>
		private static IEntityFields CreateProductModelProductDescriptionCultureEntityFields()
		{
			IEntityFields fieldsToReturn = new EntityFields((int)ProductModelProductDescriptionCultureFieldIndex.AmountOfFields);

			for(int i=0;i<(int)ProductModelProductDescriptionCultureFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((ProductModelProductDescriptionCultureFieldIndex)i);
			}

			return fieldsToReturn;
		}

	

		/// <summary>
		/// Creates a complete EntityFields instance for the ProductPhotoEntity.
		/// </summary>
		/// <returns></returns>
		private static IEntityFields CreateProductPhotoEntityFields()
		{
			IEntityFields fieldsToReturn = new EntityFields((int)ProductPhotoFieldIndex.AmountOfFields);

			for(int i=0;i<(int)ProductPhotoFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((ProductPhotoFieldIndex)i);
			}

			return fieldsToReturn;
		}

	

		/// <summary>
		/// Creates a complete EntityFields instance for the ProductProductPhotoEntity.
		/// </summary>
		/// <returns></returns>
		private static IEntityFields CreateProductProductPhotoEntityFields()
		{
			IEntityFields fieldsToReturn = new EntityFields((int)ProductProductPhotoFieldIndex.AmountOfFields);

			for(int i=0;i<(int)ProductProductPhotoFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((ProductProductPhotoFieldIndex)i);
			}

			return fieldsToReturn;
		}

	

		/// <summary>
		/// Creates a complete EntityFields instance for the ProductReviewEntity.
		/// </summary>
		/// <returns></returns>
		private static IEntityFields CreateProductReviewEntityFields()
		{
			IEntityFields fieldsToReturn = new EntityFields((int)ProductReviewFieldIndex.AmountOfFields);

			for(int i=0;i<(int)ProductReviewFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((ProductReviewFieldIndex)i);
			}

			return fieldsToReturn;
		}

	

		/// <summary>
		/// Creates a complete EntityFields instance for the ProductSubcategoryEntity.
		/// </summary>
		/// <returns></returns>
		private static IEntityFields CreateProductSubcategoryEntityFields()
		{
			IEntityFields fieldsToReturn = new EntityFields((int)ProductSubcategoryFieldIndex.AmountOfFields);

			for(int i=0;i<(int)ProductSubcategoryFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((ProductSubcategoryFieldIndex)i);
			}

			return fieldsToReturn;
		}

	

		/// <summary>
		/// Creates a complete EntityFields instance for the ProductVendorEntity.
		/// </summary>
		/// <returns></returns>
		private static IEntityFields CreateProductVendorEntityFields()
		{
			IEntityFields fieldsToReturn = new EntityFields((int)ProductVendorFieldIndex.AmountOfFields);

			for(int i=0;i<(int)ProductVendorFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((ProductVendorFieldIndex)i);
			}

			return fieldsToReturn;
		}

	

		/// <summary>
		/// Creates a complete EntityFields instance for the PurchaseOrderDetailEntity.
		/// </summary>
		/// <returns></returns>
		private static IEntityFields CreatePurchaseOrderDetailEntityFields()
		{
			IEntityFields fieldsToReturn = new EntityFields((int)PurchaseOrderDetailFieldIndex.AmountOfFields);

			for(int i=0;i<(int)PurchaseOrderDetailFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((PurchaseOrderDetailFieldIndex)i);
			}

			return fieldsToReturn;
		}

	

		/// <summary>
		/// Creates a complete EntityFields instance for the PurchaseOrderHeaderEntity.
		/// </summary>
		/// <returns></returns>
		private static IEntityFields CreatePurchaseOrderHeaderEntityFields()
		{
			IEntityFields fieldsToReturn = new EntityFields((int)PurchaseOrderHeaderFieldIndex.AmountOfFields);

			for(int i=0;i<(int)PurchaseOrderHeaderFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((PurchaseOrderHeaderFieldIndex)i);
			}

			return fieldsToReturn;
		}

	

		/// <summary>
		/// Creates a complete EntityFields instance for the ReasonEntity.
		/// </summary>
		/// <returns></returns>
		private static IEntityFields CreateReasonEntityFields()
		{
			IEntityFields fieldsToReturn = new EntityFields((int)ReasonFieldIndex.AmountOfFields);

			for(int i=0;i<(int)ReasonFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((ReasonFieldIndex)i);
			}

			return fieldsToReturn;
		}

	

		/// <summary>
		/// Creates a complete EntityFields instance for the SalesOrderDetailEntity.
		/// </summary>
		/// <returns></returns>
		private static IEntityFields CreateSalesOrderDetailEntityFields()
		{
			IEntityFields fieldsToReturn = new EntityFields((int)SalesOrderDetailFieldIndex.AmountOfFields);

			for(int i=0;i<(int)SalesOrderDetailFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((SalesOrderDetailFieldIndex)i);
			}

			return fieldsToReturn;
		}

	

		/// <summary>
		/// Creates a complete EntityFields instance for the SalesOrderHeaderEntity.
		/// </summary>
		/// <returns></returns>
		private static IEntityFields CreateSalesOrderHeaderEntityFields()
		{
			IEntityFields fieldsToReturn = new EntityFields((int)SalesOrderHeaderFieldIndex.AmountOfFields);

			for(int i=0;i<(int)SalesOrderHeaderFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((SalesOrderHeaderFieldIndex)i);
			}

			return fieldsToReturn;
		}

	

		/// <summary>
		/// Creates a complete EntityFields instance for the SalesOrderHeaderSalesReasonEntity.
		/// </summary>
		/// <returns></returns>
		private static IEntityFields CreateSalesOrderHeaderSalesReasonEntityFields()
		{
			IEntityFields fieldsToReturn = new EntityFields((int)SalesOrderHeaderSalesReasonFieldIndex.AmountOfFields);

			for(int i=0;i<(int)SalesOrderHeaderSalesReasonFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((SalesOrderHeaderSalesReasonFieldIndex)i);
			}

			return fieldsToReturn;
		}

	

		/// <summary>
		/// Creates a complete EntityFields instance for the SalesPersonEntity.
		/// </summary>
		/// <returns></returns>
		private static IEntityFields CreateSalesPersonEntityFields()
		{
			IEntityFields fieldsToReturn = new EntityFields((int)SalesPersonFieldIndex.AmountOfFields);

			for(int i=0;i<(int)SalesPersonFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((SalesPersonFieldIndex)i);
			}

			return fieldsToReturn;
		}

	

		/// <summary>
		/// Creates a complete EntityFields instance for the SalesPersonQuotaHistoryEntity.
		/// </summary>
		/// <returns></returns>
		private static IEntityFields CreateSalesPersonQuotaHistoryEntityFields()
		{
			IEntityFields fieldsToReturn = new EntityFields((int)SalesPersonQuotaHistoryFieldIndex.AmountOfFields);

			for(int i=0;i<(int)SalesPersonQuotaHistoryFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((SalesPersonQuotaHistoryFieldIndex)i);
			}

			return fieldsToReturn;
		}

	

		/// <summary>
		/// Creates a complete EntityFields instance for the SalesReasonEntity.
		/// </summary>
		/// <returns></returns>
		private static IEntityFields CreateSalesReasonEntityFields()
		{
			IEntityFields fieldsToReturn = new EntityFields((int)SalesReasonFieldIndex.AmountOfFields);

			for(int i=0;i<(int)SalesReasonFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((SalesReasonFieldIndex)i);
			}

			return fieldsToReturn;
		}

	

		/// <summary>
		/// Creates a complete EntityFields instance for the SalesTaxRateEntity.
		/// </summary>
		/// <returns></returns>
		private static IEntityFields CreateSalesTaxRateEntityFields()
		{
			IEntityFields fieldsToReturn = new EntityFields((int)SalesTaxRateFieldIndex.AmountOfFields);

			for(int i=0;i<(int)SalesTaxRateFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((SalesTaxRateFieldIndex)i);
			}

			return fieldsToReturn;
		}

	

		/// <summary>
		/// Creates a complete EntityFields instance for the SalesTerritoryEntity.
		/// </summary>
		/// <returns></returns>
		private static IEntityFields CreateSalesTerritoryEntityFields()
		{
			IEntityFields fieldsToReturn = new EntityFields((int)SalesTerritoryFieldIndex.AmountOfFields);

			for(int i=0;i<(int)SalesTerritoryFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((SalesTerritoryFieldIndex)i);
			}

			return fieldsToReturn;
		}

	

		/// <summary>
		/// Creates a complete EntityFields instance for the SalesTerritoryHistoryEntity.
		/// </summary>
		/// <returns></returns>
		private static IEntityFields CreateSalesTerritoryHistoryEntityFields()
		{
			IEntityFields fieldsToReturn = new EntityFields((int)SalesTerritoryHistoryFieldIndex.AmountOfFields);

			for(int i=0;i<(int)SalesTerritoryHistoryFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((SalesTerritoryHistoryFieldIndex)i);
			}

			return fieldsToReturn;
		}

	

		/// <summary>
		/// Creates a complete EntityFields instance for the ScrapReasonEntity.
		/// </summary>
		/// <returns></returns>
		private static IEntityFields CreateScrapReasonEntityFields()
		{
			IEntityFields fieldsToReturn = new EntityFields((int)ScrapReasonFieldIndex.AmountOfFields);

			for(int i=0;i<(int)ScrapReasonFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((ScrapReasonFieldIndex)i);
			}

			return fieldsToReturn;
		}

	

		/// <summary>
		/// Creates a complete EntityFields instance for the SequentialIDSubTypeEntity.
		/// </summary>
		/// <returns></returns>
		private static IEntityFields CreateSequentialIDSubTypeEntityFields()
		{
			IEntityFields fieldsToReturn = new EntityFields((int)SequentialIDSubTypeFieldIndex.AmountOfFields);

			for(int i=0;i<(int)SequentialIDSubTypeFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((SequentialIDSubTypeFieldIndex)i);
			}

			return fieldsToReturn;
		}

	

		/// <summary>
		/// Creates a complete EntityFields instance for the ShiftEntity.
		/// </summary>
		/// <returns></returns>
		private static IEntityFields CreateShiftEntityFields()
		{
			IEntityFields fieldsToReturn = new EntityFields((int)ShiftFieldIndex.AmountOfFields);

			for(int i=0;i<(int)ShiftFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((ShiftFieldIndex)i);
			}

			return fieldsToReturn;
		}

	

		/// <summary>
		/// Creates a complete EntityFields instance for the ShipMethodEntity.
		/// </summary>
		/// <returns></returns>
		private static IEntityFields CreateShipMethodEntityFields()
		{
			IEntityFields fieldsToReturn = new EntityFields((int)ShipMethodFieldIndex.AmountOfFields);

			for(int i=0;i<(int)ShipMethodFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((ShipMethodFieldIndex)i);
			}

			return fieldsToReturn;
		}

	

		/// <summary>
		/// Creates a complete EntityFields instance for the ShoppingCartItemEntity.
		/// </summary>
		/// <returns></returns>
		private static IEntityFields CreateShoppingCartItemEntityFields()
		{
			IEntityFields fieldsToReturn = new EntityFields((int)ShoppingCartItemFieldIndex.AmountOfFields);

			for(int i=0;i<(int)ShoppingCartItemFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((ShoppingCartItemFieldIndex)i);
			}

			return fieldsToReturn;
		}

	

		/// <summary>
		/// Creates a complete EntityFields instance for the SpecialOfferEntity.
		/// </summary>
		/// <returns></returns>
		private static IEntityFields CreateSpecialOfferEntityFields()
		{
			IEntityFields fieldsToReturn = new EntityFields((int)SpecialOfferFieldIndex.AmountOfFields);

			for(int i=0;i<(int)SpecialOfferFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((SpecialOfferFieldIndex)i);
			}

			return fieldsToReturn;
		}

	

		/// <summary>
		/// Creates a complete EntityFields instance for the SpecialOfferProductEntity.
		/// </summary>
		/// <returns></returns>
		private static IEntityFields CreateSpecialOfferProductEntityFields()
		{
			IEntityFields fieldsToReturn = new EntityFields((int)SpecialOfferProductFieldIndex.AmountOfFields);

			for(int i=0;i<(int)SpecialOfferProductFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((SpecialOfferProductFieldIndex)i);
			}

			return fieldsToReturn;
		}

	

		/// <summary>
		/// Creates a complete EntityFields instance for the StateProvinceEntity.
		/// </summary>
		/// <returns></returns>
		private static IEntityFields CreateStateProvinceEntityFields()
		{
			IEntityFields fieldsToReturn = new EntityFields((int)StateProvinceFieldIndex.AmountOfFields);

			for(int i=0;i<(int)StateProvinceFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((StateProvinceFieldIndex)i);
			}

			return fieldsToReturn;
		}

	

		/// <summary>
		/// Creates a complete EntityFields instance for the StoreEntity.
		/// </summary>
		/// <returns></returns>
		private static IEntityFields CreateStoreEntityFields()
		{
			IEntityFields fieldsToReturn = new EntityFields((int)StoreFieldIndex.AmountOfFields);

			for(int i=0;i<(int)StoreFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((StoreFieldIndex)i);
			}

			return fieldsToReturn;
		}

	

		/// <summary>
		/// Creates a complete EntityFields instance for the StoreContactEntity.
		/// </summary>
		/// <returns></returns>
		private static IEntityFields CreateStoreContactEntityFields()
		{
			IEntityFields fieldsToReturn = new EntityFields((int)StoreContactFieldIndex.AmountOfFields);

			for(int i=0;i<(int)StoreContactFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((StoreContactFieldIndex)i);
			}

			return fieldsToReturn;
		}

	

		/// <summary>
		/// Creates a complete EntityFields instance for the TransactionHistoryEntity.
		/// </summary>
		/// <returns></returns>
		private static IEntityFields CreateTransactionHistoryEntityFields()
		{
			IEntityFields fieldsToReturn = new EntityFields((int)TransactionHistoryFieldIndex.AmountOfFields);

			for(int i=0;i<(int)TransactionHistoryFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((TransactionHistoryFieldIndex)i);
			}

			return fieldsToReturn;
		}

	

		/// <summary>
		/// Creates a complete EntityFields instance for the TransactionHistoryArchiveEntity.
		/// </summary>
		/// <returns></returns>
		private static IEntityFields CreateTransactionHistoryArchiveEntityFields()
		{
			IEntityFields fieldsToReturn = new EntityFields((int)TransactionHistoryArchiveFieldIndex.AmountOfFields);

			for(int i=0;i<(int)TransactionHistoryArchiveFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((TransactionHistoryArchiveFieldIndex)i);
			}

			return fieldsToReturn;
		}

	

		/// <summary>
		/// Creates a complete EntityFields instance for the UdtTestEntity.
		/// </summary>
		/// <returns></returns>
		private static IEntityFields CreateUdtTestEntityFields()
		{
			IEntityFields fieldsToReturn = new EntityFields((int)UdtTestFieldIndex.AmountOfFields);

			for(int i=0;i<(int)UdtTestFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((UdtTestFieldIndex)i);
			}

			return fieldsToReturn;
		}

	

		/// <summary>
		/// Creates a complete EntityFields instance for the UnitMeasureEntity.
		/// </summary>
		/// <returns></returns>
		private static IEntityFields CreateUnitMeasureEntityFields()
		{
			IEntityFields fieldsToReturn = new EntityFields((int)UnitMeasureFieldIndex.AmountOfFields);

			for(int i=0;i<(int)UnitMeasureFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((UnitMeasureFieldIndex)i);
			}

			return fieldsToReturn;
		}

	

		/// <summary>
		/// Creates a complete EntityFields instance for the UserDetailEntity.
		/// </summary>
		/// <returns></returns>
		private static IEntityFields CreateUserDetailEntityFields()
		{
			IEntityFields fieldsToReturn = new EntityFields((int)UserDetailFieldIndex.AmountOfFields);

			for(int i=0;i<(int)UserDetailFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((UserDetailFieldIndex)i);
			}

			return fieldsToReturn;
		}

	

		/// <summary>
		/// Creates a complete EntityFields instance for the VendorEntity.
		/// </summary>
		/// <returns></returns>
		private static IEntityFields CreateVendorEntityFields()
		{
			IEntityFields fieldsToReturn = new EntityFields((int)VendorFieldIndex.AmountOfFields);

			for(int i=0;i<(int)VendorFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((VendorFieldIndex)i);
			}

			return fieldsToReturn;
		}

	

		/// <summary>
		/// Creates a complete EntityFields instance for the VendorAddressEntity.
		/// </summary>
		/// <returns></returns>
		private static IEntityFields CreateVendorAddressEntityFields()
		{
			IEntityFields fieldsToReturn = new EntityFields((int)VendorAddressFieldIndex.AmountOfFields);

			for(int i=0;i<(int)VendorAddressFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((VendorAddressFieldIndex)i);
			}

			return fieldsToReturn;
		}

	

		/// <summary>
		/// Creates a complete EntityFields instance for the VendorContactEntity.
		/// </summary>
		/// <returns></returns>
		private static IEntityFields CreateVendorContactEntityFields()
		{
			IEntityFields fieldsToReturn = new EntityFields((int)VendorContactFieldIndex.AmountOfFields);

			for(int i=0;i<(int)VendorContactFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((VendorContactFieldIndex)i);
			}

			return fieldsToReturn;
		}

	

		/// <summary>
		/// Creates a complete EntityFields instance for the WorkOrderEntity.
		/// </summary>
		/// <returns></returns>
		private static IEntityFields CreateWorkOrderEntityFields()
		{
			IEntityFields fieldsToReturn = new EntityFields((int)WorkOrderFieldIndex.AmountOfFields);

			for(int i=0;i<(int)WorkOrderFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((WorkOrderFieldIndex)i);
			}

			return fieldsToReturn;
		}

	

		/// <summary>
		/// Creates a complete EntityFields instance for the WorkOrderRoutingEntity.
		/// </summary>
		/// <returns></returns>
		private static IEntityFields CreateWorkOrderRoutingEntityFields()
		{
			IEntityFields fieldsToReturn = new EntityFields((int)WorkOrderRoutingFieldIndex.AmountOfFields);

			for(int i=0;i<(int)WorkOrderRoutingFieldIndex.AmountOfFields;i++)
			{
				fieldsToReturn[i] = EntityFieldFactory.Create((WorkOrderRoutingFieldIndex)i);
			}

			return fieldsToReturn;
		}

	
	
	}
}
